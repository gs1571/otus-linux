# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :server => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62301},
        :net => [
                    {adapter: 2, ip: '192.168.51.100', netmask: "255.255.255.0"},
                    {adapter: 3, virtualbox__intnet: "link1"},
                ]
    },
    :transit => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62302},
        :net => [
                    {adapter: 2, virtualbox__intnet: "link2"},
                    {adapter: 3, virtualbox__intnet: "link1"},
                ]
    },
    :client => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62303},
        :net => [
                    {adapter: 2, virtualbox__intnet: "link2"},
                ]
    },  
}

Vagrant.configure("2") do |config|

    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s

            #boxconfig[:fwd].each do |fwdconf|
            #    box.vm.network "forwarded_port", fwdconf
            #end

            if boxconfig.key?(:fwd)
                box.vm.network "forwarded_port", boxconfig[:fwd]
            end

            boxconfig[:net].each do |ipconf|
                box.vm.network "private_network", ipconf
            end
            
            if boxconfig.key?(:public)
                box.vm.network "public_network", boxconfig[:public]
            end

            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "256"]
            end

#            box.vm.provision "shell", inline: <<-SHELL
#                mkdir -p ~root/.ssh
#                cp ~vagrant/.ssh/auth* ~root/.ssh
#            SHELL
            
            case boxname.to_s

                when "client"
                    box.vm.provision "ansible" do |ansible|
                        ansible.compatibility_mode = "2.0"
                        ansible.playbook = "provision.yml"
                        ansible.verbose = "true"
                        ansible.become = "true"
                        ansible.limit = "all"
                end
            end
        end
    end
end