# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :consul => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 63301},
        :ip_addr => '192.168.11.100'
  },
  :pg1 => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 63302},
        :ip_addr => '192.168.11.120'
  },
  :pg2 => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 63303},
        :ip_addr => '192.168.11.121'
  },
  :pg3 => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 63304},
        :ip_addr => '192.168.11.122'
  },
  :haproxy => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 63305},
        :ip_addr => '192.168.11.101'
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          box.vm.network "forwarded_port", boxconfig[:fwd]

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "1048"]
            vb.customize ["modifyvm", :id, "--cpus", "4"]

            # Подключаем дополнительные диски
            #vb.customize ['createhd', '--filename', second_disk, '--format', 'VDI', '--size', 5 * 1024]
            #vb.customize ['storageattach', :id, '--storagectl', 'IDE', '--port', 0, '--device', 1, '--type', 'hdd', '--medium', second_disk]
          end

      #     box.vm.provision "shell", inline: <<-SHELL
      #       mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
      #       sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      #       systemctl restart sshd
      #       apt update -y && apt install -y \
      #       vim \
      #       python \
	# 	telnet
      #     SHELL
#=begin

            case boxname.to_s

            when "haproxy"

                  box.vm.provision "ansible" do |ansible|
                        ansible.verbose = ""
                        ansible.playbook = "provision.yml"
                        ansible.become = "true"
                        ansible.limit = "all"
                  end

           end
#=end
      end
  end
end
