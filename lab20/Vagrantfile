# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :inetRouter => {
        :box_name => "centos/7",
        #:public => {:ip => '192.168.11.100', :adapter => 1},
        :fwd => {:guest => 22, :host => 62001},
        :net => [
                   {adapter: 2, virtualbox__intnet: "team-1"},
                   {adapter: 3, virtualbox__intnet: "team-2"},
                ]
    },
    # Central Office
    :centralRouter => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62002},
        :net => [
                   {adapter: 2, virtualbox__intnet: "team-1"},
                   {adapter: 3, virtualbox__intnet: "dir-net"},
                   {adapter: 4, virtualbox__intnet: "hw-net"},
                   {adapter: 5, virtualbox__intnet: "wifi-net"},
                   {adapter: 6, virtualbox__intnet: "wan1-net"},
                   {adapter: 7, virtualbox__intnet: "wan2-net"},
                   {adapter: 8, virtualbox__intnet: "team-2"},
                ]
    },  
    # Office1
    :office1Router => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62004},
        :net => [
                   {adapter: 2, virtualbox__intnet: "wan1-net"},
                   {adapter: 3, virtualbox__intnet: "o1-dev-net"},
                   {adapter: 4, virtualbox__intnet: "o1-test-net"},
                   {adapter: 5, virtualbox__intnet: "o1-mng-net"},
                   {adapter: 6, virtualbox__intnet: "o1-hw-net"},
                   {adapter: 7, virtualbox__intnet: "vsw1"},
                ]
    },  
    :testServer1 => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62008},
        :net => [
                   {adapter: 2, virtualbox__intnet: "vsw1"},
                ]
    },  
    :testClient1 => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62009},
        :net => [
                   {adapter: 2, virtualbox__intnet: "vsw1"},
                ]
    },  
    :testServer2 => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62010},
        :net => [
                   {adapter: 2, virtualbox__intnet: "vsw1"},
                ]
    },  
    :testClient2 => {
        :box_name => "centos/7",
        :fwd => {:guest => 22, :host => 62011},
        :net => [
                   {adapter: 2, virtualbox__intnet: "vsw1"},
                ]
    },  
}

Vagrant.configure("2") do |config|

    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s

            if boxconfig.key?(:fwd)
                box.vm.network "forwarded_port", boxconfig[:fwd]
            end

            boxconfig[:net].each do |ipconf|
                box.vm.network "private_network", ipconf
            end
            
            if boxconfig.key?(:public)
                box.vm.network "public_network", boxconfig[:public]
            end

            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "256"]
            end

            box.vm.provision "shell", inline: <<-SHELL
                mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
                # correct locale
                echo "LANG=en_US.utf-8" > /etc/environment
                echo "LC_ALL=en_US.utf-8" > /etc/environment
            SHELL
            
            case boxname.to_s
            when "inetRouter"
                box.vm.provision "shell", run: "always", inline: <<-SHELL
                    #sysctl net.ipv4.conf.all.forwarding=1
                    iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
                SHELL

            when "testClient2"
                box.vm.provision "ansible" do |ansible|
                    ansible.compatibility_mode = "2.0"
                    ansible.playbook = "provision_nscript.yml"
                    ansible.verbose = "true"
                    ansible.become = "true"
                    ansible.limit = "all"
                end

            end
        end
    end
end